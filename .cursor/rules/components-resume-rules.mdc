---
description: 
globs: src/components/resume/**
alwaysApply: false
---
# src/components/resume/ 目录规则

参考架构文档: [architecture.md](mdc:docs/architecture.md)

`src/components/resume/` 目录下的所有组件都服务于简历的编辑、渲染和交互。它们遵循**解耦渲染架构**，其核心是将**布局**与**原子化渲染**分离。

该目录下的子目录有明确分工：

1.  **`templates/` - 布局调度器 (Layout Dispatchers)**
    -   存放不同的简历模板组件（如 [DefaultTemplate.tsx](mdc:src/components/resume/templates/DefaultTemplate.tsx)）。
    -   **核心职责**: 决定简历的**整体布局结构**和**章节的排列方式**。它们不负责具体内容的渲染。
    -   **覆写能力**: 可以通过 `templateLayoutMap` 覆写 `SchemaRegistry` 建议的 `defaultRenderType`，从而为特定模板的特定章节选择不同的渲染组件。
    -   参考规则: [components-templates-rules.mdc](mdc:.cursor/rules/components-templates-rules.mdc)

2.  **`rendering/` - 原子渲染组件 (Atomic Rendering Components)**
    -   存放可复用的、独立的渲染单元（如 [BadgeListComponent.tsx](mdc:src/components/resume/rendering/BadgeListComponent.tsx)）。
    -   **核心职责**: 仅负责一种**特定的渲染逻辑**（如将条目渲染为徽章列表、时间线区块等）。
    -   **高度可复用**: 这些组件是无状态的，仅根据传入的 props 渲染，可以被任何模板调用。
    -   参考规则: [components-rendering-rules.mdc](mdc:.cursor/rules/components-rendering-rules.mdc)

3.  **`canvas/` - 渲染画布 (Rendering Canvas)**
    -   存放渲染的"宿主"环境（如 [ResumeCanvas.tsx](mdc:src/components/resume/canvas/ResumeCanvas.tsx)）。
    -   **核心职责**: 承载并显示由**模板（Templates）**和**原子渲染组件（Rendering Components）**组合渲染出的最终简历视图。
    -   **WYSIWYG 核心**: [PrintableResume.tsx](mdc:src/components/resume/canvas/PrintableResume.tsx) 在这里集成了模板注册和打印逻辑，是实现屏幕与PDF"所见即所得"的关键。

4.  **`editor/` - 编辑器组件 (Editor Components)**
    -   存放与简历数据**编辑**相关的组件（如 [SectionEditor.tsx](mdc:src/components/resume/editor/SectionEditor.tsx)）。
    -   **核心职责**: 提供用户界面来修改 `ResumeData`。这些组件严格遵循 Schema 驱动原则，所有UI行为（占位符、图标、AI功能）都由 Schema 定义。

